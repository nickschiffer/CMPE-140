# $a0 = a, $a1 = b, $s0 = c, $s1 = x, $s2 = y

main:
	addiu $a0, $0, 0x8000		# a = 0x8000
	addiu $a1, $0, 0x00A9		# b = 0x00A9
	addiu $s0, $0, 1974		# c = 1974
	
	mult $a0, $a0			# x=a*a;
	mflo $s1				
	sw   $s1, 0x20($0)		# store the value of x to memory location at address 0x20
	
	mult $s1,  $a1			# y=x*b;
	mfhi $s2
	mflo $s3
	sw   $s2, 0x24($0)		# store the value of y to memory location at address 0x24
	
	# y=y>>16;

	srl  $s3, $s3, 16		# shift low right 16
	sll  $s2, $s2, 16		# shift high left 16
	or   $s2, $s2, $s3		# or results and store into y
	
	# c=(c+(y/c))/2;
	
	divu $s2, $s0			# y/c
	mflo $t0
	addu $s0, $t0, $s0		# c + (y/c)
	srl  $s0, $s0, 1 		# c /= 2
	sw   $s0, 0x2C($0)         # store the value of c to memory location at address 0x2C				
		
while: 					# while(c >= 1665){ c = (c + y / c) / 2;}
	slti $t3, $s0, 1665 		# if $t2 < $s0, $t3 = 1 else $t3 = 0 
	bne  $t3, $0, done 		# $t3 = 1 branch to done
						
	# c=(c+(y/c))/2;
	
	divu $s2, $s0			# y/c
	mflo $t0
	addu $s0, $t0, $s0		# c + (y/c)
	srl  $s0, $s0, 1		# c /= 2 
	j while  

done:
	sll  $s0, $s0, 8		# c <<= 8; 
	sw $s0, 0x30($0)		# store the value of c to memory location 0x30
	j  main